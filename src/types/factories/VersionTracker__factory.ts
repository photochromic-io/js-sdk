/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  VersionTracker,
  VersionTrackerInterface,
} from "../VersionTracker";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "getCurrentVersion",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "major",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "minor",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "coreLocation",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarLocation",
            type: "address",
          },
          {
            internalType: "address",
            name: "resolverLocation",
            type: "address",
          },
        ],
        internalType: "struct VersionTracker.Version",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "major",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minor",
        type: "uint256",
      },
    ],
    name: "getPhotochromicCore",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPhotochromicCore",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "major",
        type: "uint256",
      },
    ],
    name: "getPhotochromicCore",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "major",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minor",
        type: "uint256",
      },
    ],
    name: "getVersion",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "major",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "minor",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "coreLocation",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarLocation",
            type: "address",
          },
          {
            internalType: "address",
            name: "resolverLocation",
            type: "address",
          },
        ],
        internalType: "struct VersionTracker.Version",
        name: "version",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "major",
        type: "uint256",
      },
    ],
    name: "getVersion",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "major",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "minor",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "coreLocation",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarLocation",
            type: "address",
          },
          {
            internalType: "address",
            name: "resolverLocation",
            type: "address",
          },
        ],
        internalType: "struct VersionTracker.Version",
        name: "version",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "enum VersionTracker.ContractType",
        name: "contractType",
        type: "uint8",
      },
    ],
    name: "getVersionForAddress",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "major",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "minor",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "coreLocation",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarLocation",
            type: "address",
          },
          {
            internalType: "address",
            name: "resolverLocation",
            type: "address",
          },
        ],
        internalType: "struct VersionTracker.Version",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersionMajor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersionMinor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "coreContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "registrarContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "resolverContract",
        type: "address",
      },
    ],
    name: "updateMajor",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "major",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "minor",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "coreLocation",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarLocation",
            type: "address",
          },
          {
            internalType: "address",
            name: "resolverLocation",
            type: "address",
          },
        ],
        internalType: "struct VersionTracker.Version",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "coreContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "registrarContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "resolverContract",
        type: "address",
      },
    ],
    name: "updateMinor",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "major",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "minor",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "coreLocation",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarLocation",
            type: "address",
          },
          {
            internalType: "address",
            name: "resolverLocation",
            type: "address",
          },
        ],
        internalType: "struct VersionTracker.Version",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class VersionTracker__factory {
  static readonly abi = _abi;
  static createInterface(): VersionTrackerInterface {
    return new utils.Interface(_abi) as VersionTrackerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VersionTracker {
    return new Contract(address, _abi, signerOrProvider) as VersionTracker;
  }
}
